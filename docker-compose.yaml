version: '3'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy:1.5.1
    ports:
      - "80:80"
      #- "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      #- ./certs:/etc/nginx/certs
    environment:
      - HTTP_PORT=80
      #- HTTPS_PORT=443
      #- VIRTUAL_PROTO=https
###> doctrine/doctrine-bundle ###
  database:
    container_name: database
    image: mysql:${MYSQL_VERSION:-8.0.32}-debian
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-app}
      # You should definitely change the password in production
      MYSQL_USER: ${MYSQL_USER:-app}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-secret}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-StrongP4ssw0rd}
    volumes:
      - ./tmp/db/data:/var/lib/mysql
    restart: always
    command:
          --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION
###< doctrine/doctrine-bundle ###
  frontend:
    build:
      context: .
      dockerfile: ./Dockerfile.frontend
    container_name: ninjastic-frontend
    depends_on:
      - api
    environment:
      - VIRTUAL_HOST=ninjastic.pro
  api:
    build:
      context: .
      dockerfile: ./Dockerfile.api
    container_name: ninjastic-api
    depends_on:
      - database
    ports:
      - 8002:80
    expose:
      - 80
    links:
      - database
    restart: always
    environment:
      VIRTUAL_HOST: api.ninjastic.pro
  admin:
    container_name: ninjastic-admin
    build:
      context: .
      dockerfile: ./Dockerfile.admin
    depends_on:
      - database
    ports:
      - 8001:80
    expose:
      - 80
    links:
      - database
    restart: always
    environment:
      VIRTUAL_HOST: admin.ninjastic.pro
volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###